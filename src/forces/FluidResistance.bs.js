// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Vector from "../core/Vector.bs.js";
import * as Gravity from "./Gravity.bs.js";

function fluidResistanceForceMag(rho, velocity, area, cDrag) {
  var speed = Vector.magf(velocity);
  return 0.5 * rho * Math.pow(speed, 2) * area * cDrag;
}

function fluidResistanceForceV(rho, velocity, area, cDrag) {
  var mag = fluidResistanceForceMag(rho, velocity, area, cDrag);
  var dir = Vector.normf(Vector.multf(velocity, -1));
  return Vector.multf(dir, mag);
}

function getTerminalVelocity(mass, rho, cDrag, area) {
  return Math.sqrt(2 * mass * Gravity.gE / (rho * area * cDrag));
}

function getTau(mass, rho, cDrag, area) {
  return Math.sqrt(2 * mass / (Gravity.gE * rho * area * cDrag));
}

function getFluidPositionAtTime(time, mass, rho, cDrag, area) {
  var tv = getTerminalVelocity(mass, rho, cDrag, area);
  return Math.pow(tv, 2) / Gravity.gE * Math.log1p(Math.cosh(Gravity.gE * time) / tv);
}

function getFluidPositionAtTerminalVelocity(mass, rho, cDrag, area) {
  var tau = getTau(mass, rho, cDrag, area);
  return getFluidPositionAtTime(3 * tau, mass, rho, cDrag, area);
}

export {
  fluidResistanceForceMag ,
  fluidResistanceForceV ,
  getTau ,
  getFluidPositionAtTime ,
  getFluidPositionAtTerminalVelocity ,
  
}
/* Gravity Not a pure module */

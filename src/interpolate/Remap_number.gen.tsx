/* TypeScript file generated by genType. */
/* eslint-disable import/first */


// tslint:disable-next-line:no-var-requires
const Curry = require('bs-platform/lib/es6/curry.js');

// tslint:disable-next-line:no-var-requires
const Remap_numberBS = require('./Remap_number.bs');

export const remapf: (_1:{
  readonly range: [number, number]; 
  readonly domain: [number, number]; 
  readonly value: number
}) => number = function (Arg1: any) {
  const result = Curry._3(Remap_numberBS.remapf, Arg1.range, Arg1.domain, Arg1.value);
  return result
};

export const remap: (_1:{
  readonly range: [number, number]; 
  readonly domain: [number, number]; 
  readonly value: number
}) => number = function (Arg1: any) {
  const result = Curry._3(Remap_numberBS.remap, Arg1.range, Arg1.domain, Arg1.value);
  return result
};

export const normalizef: (_1:{ readonly range: [number, number]; readonly value: number }) => number = function (Arg1: any) {
  const result = Curry._2(Remap_numberBS.normalizef, Arg1.range, Arg1.value);
  return result
};

export const normalize: (_1:{ readonly range: [number, number]; readonly value: number }) => number = function (Arg1: any) {
  const result = Curry._2(Remap_numberBS.normalize, Arg1.range, Arg1.value);
  return result
};
